<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Property name="metaData">
    <Property name="securityTag">Tasklist</Property>
  </Property>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="dataTypeSubject" parent="Subject">
      <Reference name="children">
        <Property name="dataType">[SELF]</Property>
        <Property name="dataProvider">subjectPR#querySubject</Property>
        <Property name="parameter">
          <Entity>
            <Property name="parentnode">$${this.oid}</Property>
            <Property name="ftype">$${this.ftype}</Property>
          </Entity>
        </Property>
      </Reference>
    </DataType>
  </Model>
  <View>
    <ClientEvent name="onCreate">/**@view*/&#xD;
	var mydrop = 0;&#xD;
</ClientEvent>
    <DataSet id="dsFtypes">
      <Property name="dataProvider">ftypesPR#queryFtypes</Property>
      <Property name="dataType">[Ftypes]</Property>
    </DataSet>
    <DataSet id="dsTasklist">
      <Property name="dataType">[Tasklist]</Property>
      <Property name="dataProvider">tasklistPR#queryTasklist</Property>
      <Property name="pageSize">20</Property>
      <Property name="parameter">
        <Entity>
          <Property name="aircrafttype"></Property>
          <Property name="tasknumber"></Property>
          <Property name="subject"></Property>
        </Entity>
      </Property>
    </DataSet>
    <DataSet id="dsDictionaryTaskExecution">
      <Property name="dataProvider">dictionaryPR#queryDictionary</Property>
      <Property name="parameter">
        <Entity>
          <Property name="dictype">Dic_TaskExecution</Property>
          <Property name="status">0</Property>
        </Entity>
      </Property>
    </DataSet>
    <DataSet id="dataSetSubject">
      <Property name="dataProvider">subjectPR#querySubject</Property>
      <Property name="dataType">[dataTypeSubject]</Property>
      <Property name="parameter">
        <Entity>
          <Property name="parentnode"></Property>
          <Property name="ftype"></Property>
        </Entity>
      </Property>
    </DataSet>
    <DataSetDropDown id="dataSetDropDownTaskExecution">
      <Property name="autoOpen">true</Property>
      <Property name="dataSet">dsDictionaryTaskExecution</Property>
      <Property name="displayProperty">name</Property>
      <Property name="editable">false</Property>
      <Property name="property">name</Property>
      <Property name="useEmptyItem">true</Property>
    </DataSetDropDown>
    <DataSetDropDown id="chooseAircraft">
      <ClientEvent name="onValueSelect">var dsTasklist = this.get(&quot;#dsTasklist&quot;);&#xD;
dsTasklist.set(&quot;parameter&quot;, {&#xD;
	aircrafttype: arg.selectedValue&#xD;
});&#xD;
dsTasklist.flushAsync();&#xD;
var dataSetSubject = this.get(&quot;#dataSetSubject&quot;);&#xD;
dataSetSubject.set(&quot;parameter&quot;, {&#xD;
	ftype: arg.selectedValue&#xD;
});&#xD;
dataSetSubject.flushAsync();&#xD;
&#xD;
</ClientEvent>
      <Property name="dataSet">dsFtypes</Property>
      <Property name="property">ftypename</Property>
      <Property name="editable">false</Property>
      <Property name="autoOpen">true</Property>
      <Property name="reloadDataOnOpen">true</Property>
    </DataSetDropDown>
    <DataSetDropDown id="chooseListNumber">
      <ClientEvent name="onValueSelect">var dsTasklist = this.get(&quot;#dsTasklist&quot;);&#xD;
dsTasklist.set(&quot;parameter&quot;, {&#xD;
	tasknumber : arg.selectedValue,&#xD;
	aircrafttype : view.id('formElement1').get(&quot;value&quot;)&#xD;
});&#xD;
dsTasklist.flushAsync();</ClientEvent>
      <Property name="useEmptyItem">true</Property>
      <Property name="dataSet">dsTasklist</Property>
      <Property name="property">tasknumber</Property>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <Property name="reloadDataOnOpen">false</Property>
    </DataSetDropDown>
    <CustomDropDown id="chooseSubject">
      <ClientEvent name="onClose">var dataTree = this.get(&quot;#subjectDataTree&quot;);&#xD;
var selectNodes = dataTree.getCheckedNodes();&#xD;
var dsTasklist = this.get(&quot;#dsTasklist&quot;);&#xD;
var temp=[];&#xD;
var time = 0;&#xD;
var name = &quot;&quot;;&#xD;
while(time &lt; selectNodes.length){&#xD;
	name += selectNodes[time].get(&quot;data.name&quot;) + &quot;,&quot;;&#xD;
	temp.push(selectNodes[time].get(&quot;data.name&quot;));&#xD;
	time = time + 1;	&#xD;
}&#xD;
name = name.substring(0,name.length-1);&#xD;
var form = view.get(&quot;#formElement3&quot;);&#xD;
form.set(&quot;value&quot;,name); 	&#xD;
arg.processDefault = false;&#xD;
var dsTasklist = this.get(&quot;#dsTasklist&quot;);&#xD;
var temp = [];&#xD;
var entity = this.get(&quot;#autoForm1.entity&quot;);&#xD;
var name = view.id('formElement3').get(&quot;value&quot;);&#xD;
temp = name.split(&quot;,&quot;);&#xD;
dsTasklist.set(&quot;parameter&quot;, {&#xD;
	aircrafttype: view.id('formElement1').get(&quot;value&quot;),&#xD;
	subject: temp&#xD;
});&#xD;
dsTasklist.flushAsync();</ClientEvent>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <Property name="height">400</Property>
      <Property name="width">250</Property>
      <Container>
        <Property name="height">200</Property>
        <ToolBar>
          <ToolBarButton>
            <ClientEvent name="onClick">var dataTree = this.get(&quot;#subjectDataTree&quot;);&#xD;
var selectNodes = dataTree.getCheckedNodes();&#xD;
var temp=[];&#xD;
var time = 0;&#xD;
var name = &quot;&quot;;&#xD;
while(time &lt; selectNodes.length){&#xD;
	name += selectNodes[time].get(&quot;data.name&quot;) + &quot;,&quot;;&#xD;
	temp.push(selectNodes[time].get(&quot;data.name&quot;));&#xD;
	time = time + 1;&#xD;
}&#xD;
name = name.substring(0,name.length-1);&#xD;
var form = view.get(&quot;#formElement3&quot;);&#xD;
form.set(&quot;value&quot;,name); &#xD;
arg.processDefault = false;&#xD;
view.get(&quot;#chooseSubject&quot;).close();&#xD;
var dsTasklist = this.get(&quot;#dsTasklist&quot;);&#xD;
var temp = [];&#xD;
var entity = this.get(&quot;#autoForm1.entity&quot;);&#xD;
var name = view.id('formElement3').get(&quot;value&quot;);&#xD;
temp = name.split(&quot;,&quot;);&#xD;
dsTasklist.set(&quot;parameter&quot;, {&#xD;
	aircrafttype: view.id('formElement1').get(&quot;value&quot;),&#xD;
	subject: temp&#xD;
});&#xD;
dsTasklist.flushAsync();</ClientEvent>
            <Property name="caption">确定</Property>
          </ToolBarButton>
          <ToolBarButton>
            <ClientEvent name="onClick">var dataTree = this.get(&quot;#subjectDataTree&quot;);&#xD;
function unselect(nodes) {&#xD;
	nodes.each(function(node) {&#xD;
		unselect(node.get(&quot;nodes&quot;));&#xD;
		node.set(&quot;checked&quot;, false);&#xD;
	});&#xD;
}&#xD;
unselect(dataTree.get(&quot;nodes&quot;));&#xD;
view.get(&quot;#chooseSubject&quot;).close();&#xD;
</ClientEvent>
            <Property name="caption">取消</Property>
          </ToolBarButton>
        </ToolBar>
        <DataTree id="subjectDataTree">
          <Property name="dataSet">dataSetSubject</Property>
          <Property name="selectionMode">multiRows</Property>
          <Property name="width">260</Property>
          <BindingConfigs>
            <BindingConfig>
              <Property name="tipProperty">description</Property>
              <Property name="labelProperty">name</Property>
              <Property name="recursive">true</Property>
              <Property name="icon">url(>skin>common/icons.gif) -220px -60px</Property>
              <Property name="expandLevel">3</Property>
              <Property name="childrenProperty">children</Property>
              <Property name="checkable">true</Property>
            </BindingConfig>
          </BindingConfigs>
        </DataTree>
      </Container>
    </CustomDropDown>
    <CustomDropDown id="cddSubject">
      <ClientEvent name="onClose">var caption = view.id('diaTasklist').get(&quot;caption&quot;);&#xD;
if(caption == &quot;新增试飞任务单&quot;){&#xD;
	var selections = view.get(&quot;#dataTreeSubject&quot;).getCheckedNodes();&#xD;
	var tmpList = selections.slice(0);&#xD;
	if(tmpList.length != 0){&#xD;
		var name = &quot;&quot;;&#xD;
		tmpList.each(function(entity){&#xD;
		name += entity.get(&quot;data.name&quot;) + &quot;,&quot; ;});         //data是因为树节点&#xD;
		var entity=view.get(&quot;#dsTasklist&quot;).getData(&quot;#&quot;);&#xD;
		name=name.substring(0,name.length-1);&#xD;
		entity.set(&quot;subject&quot;,name);                        //赋给subject，这是Tasklist的一个字段&#xD;
	}&#xD;
	arg.processDefault = false;&#xD;
}&#xD;
if(caption == &quot;修改试飞任务单&quot; &amp;&amp; view.mydrop == 1 ){&#xD;
	var selections = view.get(&quot;#dataTreeSubject&quot;).getCheckedNodes();&#xD;
	var tmpList=selections.slice(0);&#xD;
	if(tmpList.length!=0){&#xD;
		var name=&quot;&quot;;		&#xD;
		tmpList.each(function(entity){&#xD;
			name += entity.get(&quot;data.name&quot;) + &quot;,&quot;;});        //data是因为树节点&#xD;
		var entity=view.get(&quot;#dsTasklist&quot;).getData(&quot;#&quot;);&#xD;
		name=name.substring(0,name.length-1);&#xD;
		entity.set(&quot;subject&quot;,name);                          //赋给subject，这是Tasklist的一个字段&#xD;
	}&#xD;
	arg.processDefault = false;&#xD;
}&#xD;
view.mydrop=1;</ClientEvent>
      <ClientEvent name="onOpen">//datatree获取选中行，迭代设置选中状态，清空选中&#xD;
var nodes=view.get(&quot;#dataTreeSubject&quot;).getCheckedNodes();&#xD;
nodes.each(function(node){&#xD;
	node.set(&quot;checked&quot;,false);&#xD;
});&#xD;
//编辑时将已有行设置为选中 &#xD;
var value =view.get(&quot;#afSubject.value&quot;);&#xD;
if(value){&#xD;
	function getAllNodes(nodes,stvalue){&#xD;
		nodes.each(function(node){&#xD;
		var children=node.get(&quot;nodes&quot;);&#xD;
		if(children){&#xD;
			children.each(function(node){ &#xD;
				if(node.get(&quot;data.name&quot;)==stvalue){&#xD;
					selectedItems.push(node);	&#xD;
				}	&#xD;
		});&#xD;
		getAllNodes(children,stvalue);&#xD;
		}&#xD;
		});&#xD;
	}&#xD;
	var selectedItems=[];&#xD;
	var p1=value.indexOf(&quot;,&quot;);&#xD;
	if(p1==-1){              &#xD;
		var dataList =view.get(&quot;#dataTreeSubject&quot;).get(&quot;nodes&quot;);//顶层节点&#xD;
		dataList.each(function(node){ &#xD;
		if(node.get(&quot;data.name&quot;)==value){&#xD;
			selectedItems.push(node);	&#xD;
		}&#xD;
	});&#xD;
	getAllNodes(dataList,value);&#xD;
	}&#xD;
	else{&#xD;
		while(p1!=-1){&#xD;
			value1=value.substring(0,p1);&#xD;
			var dataList =view.get(&quot;#dataTreeSubject&quot;).get(&quot;nodes&quot;);&#xD;
			dataList.each(function(entity){&#xD;
			if(entity.get(&quot;data.name&quot;)==value1){&#xD;
			selectedItems.push(entity);		&#xD;
			}&#xD;
			});&#xD;
			getAllNodes(dataList,value1);&#xD;
			value=value.substring(p1+1,value.length);&#xD;
			var p1=value.indexOf(&quot;,&quot;);&#xD;
			if(p1==-1){	&#xD;
	    		dataList.each(function(entity){&#xD;
				if(entity.get(&quot;data.name&quot;)==value){&#xD;
					selectedItems.push(entity);	&#xD;
				}&#xD;
				});&#xD;
			getAllNodes(dataList,value);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	selectedItems.each(function(node){&#xD;
	node.set(&quot;checked&quot;,true);&#xD;
    });&#xD;
	&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
</ClientEvent>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <Container>
        <Property name="width">300</Property>
        <Property name="height">300</Property>
        <ToolBar layoutConstraint="bottom">
          <Button>
            <ClientEvent name="onClick">var selections = view.get(&quot;#dataTreeSubject&quot;).getCheckedNodes();&#xD;
var tmpList=selections.slice(0);&#xD;
if(tmpList.length==0){&#xD;
	alert(&quot;试飞科目必填&quot;);&#xD;
	}&#xD;
else{&#xD;
	var name=&quot;&quot;;&#xD;
	tmpList.each(function(entity){&#xD;
		name += entity.get(&quot;data.name&quot;) + &quot;,&quot;;});         //data是因为树节点&#xD;
	name=name.substring(0,name.length-1);&#xD;
	var entity=view.get(&quot;#dsTasklist&quot;).getData(&quot;#&quot;);&#xD;
	entity.set(&quot;subject&quot;,name);                           //赋给subject，这是Tasklist的一个字段&#xD;
	}&#xD;
view.get(&quot;#cddSubject&quot;).close();&#xD;
arg.processDefault = false;</ClientEvent>
            <Property name="caption">确定</Property>
          </Button>
          <Button>
            <ClientEvent name="onClick">view.set(&quot;#dataTreeGridSubject.selection&quot;,null);&#xD;
view.get(&quot;#customDropDown1&quot;).close();&#xD;
arg.processDefault = false;&#xD;
&#xD;
	</ClientEvent>
            <Property name="caption">取消</Property>
          </Button>
        </ToolBar>
        <DataTree id="dataTreeSubject" layoutConstraint="left">
          <ClientEvent name="onReady">var value =view.get(&quot;#afSubject.value&quot;);&#xD;
if(value){&#xD;
	function getAllNodes(nodes,stvalue){&#xD;
		nodes.each(function(node){&#xD;
			var children=node.get(&quot;nodes&quot;);&#xD;
			if(children){&#xD;
				children.each(function(node){ &#xD;
			if(node.get(&quot;data.name&quot;)==stvalue){&#xD;
				selectedItems.push(node);&#xD;
				}&#xD;
			});&#xD;
			getAllNodes(children,stvalue);&#xD;
			}&#xD;
		});&#xD;
	}&#xD;
	var selectedItems=[];&#xD;
	var p1=value.indexOf(&quot;,&quot;);&#xD;
	if(p1==-1){            &#xD;
		var dataList =view.get(&quot;#dataTreeSubject&quot;).get(&quot;nodes&quot;);//顶层节点&#xD;
		dataList.each(function(node){ &#xD;
		if(node.get(&quot;data.name&quot;)==value){&#xD;
			selectedItems.push(node);	&#xD;
		}&#xD;
	});&#xD;
	getAllNodes(dataList,value);&#xD;
	}&#xD;
	else{&#xD;
		while(p1!=-1){&#xD;
			value1=value.substring(0,p1);&#xD;
			var dataList =view.get(&quot;#dataTreeSubject&quot;).get(&quot;nodes&quot;);&#xD;
			dataList.each(function(entity){&#xD;
				if(entity.get(&quot;data.name&quot;)==value1){&#xD;
					selectedItems.push(entity);		&#xD;
				}		&#xD;
			});&#xD;
			getAllNodes(dataList,value1);&#xD;
			value=value.substring(p1+1,value.length);&#xD;
			var p1=value.indexOf(&quot;,&quot;);&#xD;
			if(p1==-1){&#xD;
				dataList.each(function(entity){&#xD;
					if(entity.get(&quot;data.name&quot;)==value){&#xD;
						selectedItems.push(entity);	&#xD;
					}		&#xD;
				});&#xD;
				getAllNodes(dataList,value);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	selectedItems.each(function(node){&#xD;
	node.set(&quot;checked&quot;,true);&#xD;
    });&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
</ClientEvent>
          <Property name="dataSet">dataSetSubject</Property>
          <Property name="draggable">false</Property>
          <Property name="droppable">false</Property>
          <Property name="width">650</Property>
          <Property name="selectionMode">multiRows</Property>
          <Property name="height">90%</Property>
          <BindingConfigs>
            <BindingConfig>
              <Property name="childrenProperty">children</Property>
              <Property name="tipProperty">description</Property>
              <Property name="labelProperty">name</Property>
              <Property name="recursive">true</Property>
              <Property name="icon">url(>skin>common/icons.gif) -220px -60px</Property>
              <Property name="checkable">true</Property>
              <Property name="autoCheckChildren">true</Property>
              <Property name="expandLevel">4</Property>
            </BindingConfig>
          </BindingConfigs>
        </DataTree>
      </Container>
    </CustomDropDown>
    <UpdateAction id="uaTasklist">
      <Property name="dataResolver">tasklistPR#saveTasklist</Property>
      <UpdateItem>
        <Property name="dataSet">dsTasklist</Property>
        <Property name="dataPath">!DIRTY_TREE</Property>
      </UpdateItem>
    </UpdateAction>
    <AjaxAction id="deleteFileAction">
      <ClientEvent name="beforeExecute">var cur=view.id('dsTasklist').getData('#');&#xD;
var value = &quot;/Fly_Tasklist/&quot; + cur.get(&quot;oid&quot;) + &quot;/&quot;;&#xD;
var file = cur.get(&quot;filename&quot;);&#xD;
self.set(&quot;parameter&quot;,{&#xD;
	record: value,&#xD;
	filename: file&#xD;
});&#xD;
cur.set(&quot;filename&quot;,null);&#xD;
var link = view.id(&quot;lefile&quot;);&#xD;
link.set(&quot;visible&quot;,false);</ClientEvent>
      <Property name="service">defaultUploadProcessor#deleteFile</Property>
    </AjaxAction>
    <UploadAction id="uaUpload">
      <ClientEvent name="onFilesAdded">var cur=view.id('dsTasklist').getData('#');&#xD;
var value = &quot;/Fly_Tasklist/&quot; + cur.get(&quot;oid&quot;) + &quot;/&quot;;&#xD;
self.set(&quot;multipartParams&quot;, {record: value});</ClientEvent>
      <ClientEvent name="onFileUploaded">var returnValue = arg.file.name;&#xD;
var cur=view.id('dsTasklist').getData('#');&#xD;
cur.set(&quot;filename&quot;,returnValue);&#xD;
var link = view.id(&quot;lefile&quot;);&#xD;
if(returnValue){&#xD;
	var oid = cur.get(&quot;oid&quot;);&#xD;
    var href = &quot;ServletDownload?filename=Fly_Tasklist/&quot; + oid + &quot;/&quot; + returnValue;&#xD;
    link.set({&#xD;
		href: href,&#xD;
		visible: true&#xD;
	});&#xD;
}&#xD;
else{&#xD;
    link.set(&quot;visible&quot;,false);&#xD;
}</ClientEvent>
      <ClientEvent name="onError">var error = arg.error;&#xD;
dorado.MessageBox.show({&#xD;
	title:error.message,&#xD;
	message:error.file.name + &quot; 超过大小限制:&quot;+ self.get('maxFileSize'),&#xD;
	icon: &quot;WARNING&quot;,&#xD;
	buttons: [&quot;ok&quot;]&#xD;
});</ClientEvent>
      <Property name="url">>dorado/uploader/fileupload</Property>
      <Property name="maxFileSize">100MB</Property>
      <Filters/>
    </UploadAction>
    <Dialog id="diaTasklist">
      <ClientEvent name="onClose">var cur=view.id('dsTasklist').getData('#');&#xD;
if(cur){&#xD;
	cur.cancel();&#xD;
	view.id('diaTasklist').hide();&#xD;
	view.id(&quot;TasknoForm&quot;).set(&quot;editable&quot;, true);&#xD;
	}</ClientEvent>
      <Property name="center">true</Property>
      <Property name="modal">true</Property>
      <Property name="width">800</Property>
      <Buttons>
        <Button>
          <ClientEvent name="onClick">view.id('uaTasklist').execute(function(){
	view.id(&quot;TasknoForm&quot;).set(&quot;editable&quot;, true);
	view.id('diaTasklist').hide();    
});       </ClientEvent>
          <Property name="caption">确定</Property>
          <Property name="icon">url(>skin>common/icons.gif) -20px 0px</Property>
        </Button>
        <Button>
          <ClientEvent name="onClick">var cur=view.id('dsTasklist').getData('#');
if(cur){
	cur.cancel();
	view.id('diaTasklist').hide();
	view.id(&quot;TasknoForm&quot;).set(&quot;editable&quot;, true);
	}
	         </ClientEvent>
          <Property name="caption">取消</Property>
          <Property name="icon">url(>skin>common/icons.gif) -220px -240px</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm id="afTasklist">
          <Property name="cols">*</Property>
          <Property name="dataSet">dsTasklist</Property>
          <Property name="dataPath">#</Property>
          <Property name="labelWidth">90</Property>
          <AutoFormElement>
            <Property name="name">AircraftType</Property>
            <Property name="property">aircrafttype</Property>
            <Property name="trigger">chooseAircraft</Property>
            <Property name="readOnly">true</Property>
          </AutoFormElement>
          <AutoFormElement id="TasknoForm">
            <Property name="name">TaskNumber</Property>
            <Property name="property">tasknumber</Property>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">TaskExecution</Property>
            <Property name="property">taskexecution</Property>
            <Property name="trigger">dataSetDropDownTaskExecution</Property>
          </AutoFormElement>
          <AutoFormElement id="afSubject">
            <Property name="name">Subject</Property>
            <Property name="property">subject</Property>
            <Property name="trigger">cddSubject</Property>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">TaskContent</Property>
            <Property name="property">taskcontent</Property>
            <Property name="height">250</Property>
            <Property name="editorType">TextArea</Property>
          </AutoFormElement>
          <AutoFormElement layoutConstraint="colSpan:2;rowSpan:2">
            <Property name="name">FileName</Property>
            <Property name="property">filename</Property>
            <Editor>
              <Container>
                <Link id="lefile" layoutConstraint="center">
                  <Property name="dataSet">dsTasklist</Property>
                  <Property name="property">filename</Property>
                </Link>
                <Button layoutConstraint="right">
                  <Property name="caption">删除</Property>
                  <Property name="action">deleteFileAction</Property>
                </Button>
                <Button layoutConstraint="right padding:0,10,0,10">
                  <Property name="caption">上传</Property>
                  <Property name="action">uaUpload</Property>
                </Button>
              </Container>
            </Editor>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">miji</Property>
            <Property name="property">miji</Property>
          </AutoFormElement>
        </AutoForm>
      </Children>
      <Tools/>
    </Dialog>
    <ToolBar>
      <FormElement id="formElement1">
        <Property name="editorWidth">150</Property>
        <Property name="label">选择机型：</Property>
        <Property name="trigger">chooseAircraft</Property>
        <Editor/>
      </FormElement>
      <DataPilot>
        <Property name="itemCodes">pages</Property>
        <Property name="dataSet">dsTasklist</Property>
        <Property name="dataPath"></Property>
      </DataPilot>
      <ToolBarButton>
        <ClientEvent name="onClick">var guid = &quot;&quot;;
for(var i=1;i&lt;=32;i++){
	var n = Math.floor(Math.random()*16.0).toString(16);
	guid += n;
	if((i==8)||(i==12)||(i==16)||(i==20))
		  guid += &quot;-&quot;;
}
dialog = view.id('diaTasklist');
dialog.set(&quot;caption&quot;,&quot;新增试飞任务单&quot;);
var cur = view.id('formElement1').get(&quot;value&quot;);
if(cur){
	view.id('dsTasklist').getData().insert({
		aircrafttype : cur,
		oid : guid
	});
	view.id('diaTasklist').show();
	var link = view.id(&quot;lefile&quot;);
	link.set(&quot;visible&quot;,false);
}
else{
	dorado.MessageBox.alert(&quot;请先选择机型&quot;);
}
</ClientEvent>
        <Property name="caption">新增</Property>
        <Property name="icon">url(>skin>common/icons.gif) -120px -0px</Property>
      </ToolBarButton>
      <ToolBarButton>
        <ClientEvent name="onClick">dialog = view.id('diaTasklist');
dialog.set(&quot;caption&quot;,&quot;修改试飞任务单&quot;);
var cur=view.id('dsTasklist').getData('#');
if (cur) {
	view.id(&quot;TasknoForm&quot;).set(&quot;editable&quot;, false);
	view.id('diaTasklist').show();
	var file = cur.get(&quot;filename&quot;);
    var link = view.id(&quot;lefile&quot;);
    if(file){
        var oid = cur.get(&quot;oid&quot;);
		var href = &quot;ServletDownload?filename=Fly_Tasklist/&quot; + oid + &quot;/&quot; + file;
        link.set({
	       href: href,
	       visible: true
        });
    }
    else
      link.set(&quot;visible&quot;,false);
}</ClientEvent>
        <Property name="caption">修改</Property>
        <Property name="icon"> url(>skin>common/icons.gif) -300px -60px</Property>
      </ToolBarButton>
      <ToolBarButton>
        <ClientEvent name="onClick">var cur=view.id('dsTasklist').getData('#');
var ua=view.id('uaTasklist')
if(cur){
	dorado.MessageBox.confirm('您是否确认删除此条记录?', function(){
		cur.remove();
		ua.execute();
	}); 
} 
	</ClientEvent>
        <Property name="caption">删除</Property>
        <Property name="icon"> url(>skin>common/icons.gif) -140px -0px</Property>
      </ToolBarButton>
      <ToolBarButton>
        <ClientEvent name="onClick">view.id('dgTasklist').set(&quot;showFilterBar&quot;,!view.id('dgTasklist').get(&quot;showFilterBar&quot;));</ClientEvent>
        <Property name="caption">自定义查询</Property>
        <Property name="icon"> url(>skin>common/icons.gif) -20px -40px</Property>
      </ToolBarButton>
      <ToolBarButton>
        <ClientEvent name="onClick">var dsTasklist = view.id(&quot;dsTasklist&quot;);&#xD;
dsTasklist.flushAsync();</ClientEvent>
        <Property name="caption">刷新</Property>
        <Property name="icon">url(>skin>common/icons.gif) -40px -240px</Property>
        <Property name="width">57</Property>
      </ToolBarButton>
      <Fill/>
      <FormElement id="formElement3" layoutConstraint="right">
        <Property name="editorWidth">150</Property>
        <Property name="label">按科目查询：</Property>
        <Property name="trigger">chooseSubject</Property>
        <Property name="labelWidth">90</Property>
        <Editor/>
      </FormElement>
    </ToolBar>
    <DataGrid id="dgTasklist">
      <Property name="readOnly">true</Property>
      <Property name="dataSet">dsTasklist</Property>
      <Property name="dataPath"></Property>
      <Property name="filterMode">serverSide</Property>
      <Property name="showFilterBar">false</Property>
      <Property name="rowHeight">22</Property>
      <RowNumColumn/>
      <DataColumn name="aircrafttype">
        <Property name="property">aircrafttype</Property>
        <Property name="width">120</Property>
      </DataColumn>
      <DataColumn name="tasknumber">
        <Property name="property">tasknumber</Property>
        <Property name="width">120</Property>
      </DataColumn>
      <DataColumn name="subject">
        <Property name="property">subject</Property>
        <Property name="width">200</Property>
      </DataColumn>
      <DataColumn name="taskexecution">
        <Property name="property">taskexecution</Property>
        <Property name="width">120</Property>
      </DataColumn>
      <DataColumn name="taskcontent">
        <Property name="property">taskcontent</Property>
        <Property name="width">400</Property>
      </DataColumn>
      <DataColumn name="filename">
        <ClientEvent name="onRenderCell">jQuery(arg.dom).empty();&#xD;
var file = arg.data.get(&quot;filename&quot;);&#xD;
var oid = arg.data.get(&quot;oid&quot;);&#xD;
var href = &quot;ServletDownload?filename=Fly_Tasklist/&quot; + oid + &quot;/&quot; + file;&#xD;
jQuery(arg.dom).xCreate({&#xD;
	tagName:&quot;A&quot;,&#xD;
	href:href,&#xD;
	content:arg.data.get(&quot;filename&quot;)&#xD;
});</ClientEvent>
        <Property name="property">filename</Property>
        <Property name="width">200</Property>
      </DataColumn>
      <DataColumn>
        <Property name="width">120</Property>
        <Property name="property">miji</Property>
        <Property name="align">left</Property>
      </DataColumn>
    </DataGrid>
  </View>
</ViewConfig>
